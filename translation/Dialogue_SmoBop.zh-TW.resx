<?xml version="1.0" encoding="utf-8"?>
<root>
	<!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
	<xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
		<xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
		<xsd:element name="root" msdata:IsDataSet="true">
			<xsd:complexType>
				<xsd:choice maxOccurs="unbounded">
					<xsd:element name="metadata">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="value" type="xsd:string" minOccurs="0" />
							</xsd:sequence>
							<xsd:attribute name="name" use="required" type="xsd:string" />
							<xsd:attribute name="type" type="xsd:string" />
							<xsd:attribute name="mimetype" type="xsd:string" />
							<xsd:attribute ref="xml:space" />
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="assembly">
						<xsd:complexType>
							<xsd:attribute name="alias" type="xsd:string" />
							<xsd:attribute name="name" type="xsd:string" />
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="data">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
								<xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
							</xsd:sequence>
							<xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
							<xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
							<xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
							<xsd:attribute ref="xml:space" />
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="resheader">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
							</xsd:sequence>
							<xsd:attribute name="name" type="xsd:string" use="required" />
						</xsd:complexType>
					</xsd:element>
				</xsd:choice>
			</xsd:complexType>
		</xsd:element>
	</xsd:schema>
	<resheader name="resmimetype">
		<value>text/microsoft-resx</value>
	</resheader>
	<resheader name="version">
		<value>2.0</value>
	</resheader>
	<resheader name="reader">
		<value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
	</resheader>
	<resheader name="writer">
		<value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
	</resheader>
	<data name="003_000" xml:space="preserve">
		<value>我愛我的娃娃！超級愛她的！超愛超愛超愛！</value>
	</data>
	<data name="002_000" xml:space="preserve">
		<value>好吧絲莫芭普，這是菲基特娃娃，給你。這個比真的好！</value>
	</data>
	<data name="002_020" xml:space="preserve">
		<value>謝謝，絲莫芭普。</value>
	</data>
	<data name="000_130" xml:space="preserve">
		<value>嘿！</value>
	</data>
	<data name="000_100" xml:space="preserve">
		<value>絲莫芭普！</value>
	</data>
	<data name="001_000" xml:space="preserve">
		<value>你回來了！那個是我的娃娃嗎？</value>
	</data>
	<data name="001_010" xml:space="preserve">
		<value>不，莫芭普，那只是菲基特。</value>
	</data>
	<data name="000_010" xml:space="preserve">
		<value>什麼？我？</value>
	</data>
	<data name="000_020" xml:space="preserve">
		<value>一隻飛天貓！</value>
	</data>
	<data name="000_000" xml:space="preserve">
		<value>喔，是隻漂亮的小貓！</value>
	</data>
	<data name="000_030" xml:space="preserve">
		<value>小女孩，她不是貓。她是…呃…我也不知道他是什麼。</value>
	</data>
	<data name="000_040" xml:space="preserve">
		<value>我不是貓，你這個笨蛋。我是精靈！</value>
	</data>
	<data name="000_060" xml:space="preserve">
		<value>對，妳好！我叫做菲基特，我們是不是見過面？</value>
	</data>
	<data name="000_050" xml:space="preserve">
		<value>別人都這樣稱呼妳？精靈？</value>
	</data>
	<data name="000_120" xml:space="preserve">
		<value>嗯…，絲莫芭普。我很遺憾，雖然菲基特看起來就像是玩具，但是她並不是。</value>
	</data>
	<data name="000_140" xml:space="preserve">
		<value>喔，我想要她！她會說話！我可以跟你交換嗎？我有這整箱的東西！</value>
	</data>
	<data name="000_150" xml:space="preserve">
		<value>嘿達斯特，你看！這應該是里德的箱子！</value>
	</data>
	<data name="000_080" xml:space="preserve">
		<value>達斯特！？做點什麼都好！快把我從小女孩手中弄走！</value>
	</data>
	<data name="000_090" xml:space="preserve">
		<value>別擔心菲基特。不好意思，呃，妳的名字是？</value>
	</data>
	<data name="000_070" xml:space="preserve">
		<value>我可以擁有它嗎？我想要它！</value>
	</data>
	<data name="002_010" xml:space="preserve">
		<value>喔，她好漂亮！來，這個給你！</value>
	</data>
	<data name="002_040" xml:space="preserve">
		<value>謝謝妳，好好享受妳的菲基特。</value>
	</data>
	<data name="000_180" xml:space="preserve">
		<value>對，也許他可以幫我們做給絲莫芭普一些不同種的菲基特。畢竟絲莫芭普太年幼，沒有辦法照顧像妳這樣的寵物。</value>
	</data>
	<data name="000_190" xml:space="preserve">
		<value>對，這責任對對她來說太...嘿！</value>
	</data>
	<data name="000_160" xml:space="preserve">
		<value>嗯，跟妳說，下一次我去surface時如果我有找到合適的替代品，我會拿來跟妳交換。</value>
	</data>
	<data name="000_170" xml:space="preserve">
		<value>呦！好點子達斯特。你知道在極光村的那家商店有些東西，也許店長可以幫我們雕塑一個？</value>
	</data>
	<data name="002_030" xml:space="preserve">
		<value>不久前布洛普給我的！他是在表面附近找到的，我猜。</value>
	</data>
</root>